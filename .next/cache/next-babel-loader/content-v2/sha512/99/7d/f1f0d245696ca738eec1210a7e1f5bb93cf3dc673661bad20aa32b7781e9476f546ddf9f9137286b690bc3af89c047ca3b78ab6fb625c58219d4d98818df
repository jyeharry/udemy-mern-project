{"ast":null,"code":"import _defineProperty from \"/Users/jyeharry/Projects/udemy-mern-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/jyeharry/Projects/udemy-mern-project/pages/signup.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Form, Button, Message, Segment, TextArea, Divider } from 'semantic-ui-react';\nimport { HeaderMessage, FooterMessage } from '../components/Common/WelcomeMessage';\nimport SocialInputs from '../components/Common/SocialInputs';\nvar regexUsername = /^(?!.*\\.\\.)(?!.*\\.$)[^\\W][\\w.]{0,29}$/;\n\nfunction Signup() {\n  _s();\n\n  var _useState = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    bio: '',\n    facebook: '',\n    instagram: '',\n    youtube: '',\n    twitter: ''\n  }),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var firstName = user.firstName,\n      lastName = user.lastName,\n      email = user.email,\n      password = user.password,\n      bio = user.bio;\n\n  var _useState2 = useState(false),\n      showSocialLinks = _useState2[0],\n      setShowSocialLinks = _useState2[1];\n\n  var _useState3 = useState(false),\n      showPassword = _useState3[0],\n      setShowPassword = _useState3[1];\n\n  var _useState4 = useState(null),\n      errorMessage = _useState4[0],\n      setErrorMessage = _useState4[1];\n\n  var _useState5 = useState(false),\n      formLoading = _useState5[0],\n      setFormLoading = _useState5[1];\n\n  var _useState6 = useState(true),\n      submitDisabled = _useState6[0],\n      setSubmitDisabled = _useState6[1];\n\n  var _useState7 = useState(''),\n      username = _useState7[0],\n      setUsername = _useState7[1];\n\n  var _useState8 = useState(false),\n      usernameLoading = _useState8[0],\n      setUsernameLoading = _useState8[1];\n\n  var _useState9 = useState(false),\n      usernameAvailable = _useState9[0],\n      setUsernameAvailable = _useState9[1];\n\n  useEffect(function () {\n    var isFormComplete = [name, email, password, bio].every(function (item) {\n      return Boolean(item);\n    });\n    setSubmitDisabled(!isFormComplete);\n  });\n\n  var handleSubmit = function handleSubmit(e) {\n    return e.preventDefault();\n  };\n\n  var handleChange = function handleChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setUser(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(HeaderMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), __jsx(Form, {\n    loading: formLoading,\n    error: !errorMessage,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(Message, {\n    error: true,\n    header: \"Oops!\",\n    content: errorMessage,\n    onDismiss: function onDismiss() {\n      return setErrorMessage(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), __jsx(Segment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Input, {\n    label: \"First name\",\n    placeholder: \"First name\",\n    name: \"firstName\",\n    value: firstName,\n    onChange: handleChange,\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), __jsx(Form.Input, {\n    label: \"Last name\",\n    placeholder: \"Last name\",\n    name: \"lastName\",\n    value: lastName,\n    onChange: handleChange,\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), __jsx(Form.Input, {\n    loading: usernameLoading,\n    error: !usernameAvailable,\n    label: \"Username\",\n    placeholder: \"Username\",\n    value: username,\n    onChange: function onChange(e) {\n      setUsername(e.target.value);\n      setUsernameAvailable(regexUsername.test(e.target.value));\n    },\n    fluid: true,\n    icon: usernameAvailable ? 'check' : 'close',\n    iconPosition: \"left\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), __jsx(Form.Input, {\n    label: \"Email\",\n    placeholder: \"Email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    fluid: true,\n    icon: \"envelope\",\n    iconPosition: \"left\",\n    type: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), __jsx(Form.Input, {\n    label: \"Password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    fluid: true,\n    icon: {\n      name: 'eye',\n      circular: true,\n      link: true,\n      onClick: function onClick() {\n        return setShowPassword(!showPassword);\n      }\n    },\n    iconPosition: \"left\",\n    type: showPassword ? 'text' : 'password',\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }), __jsx(SocialInputs, {\n    user: user,\n    showSocialLinks: showSocialLinks,\n    setShowSocialLinks: setShowSocialLinks,\n    handleChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }), __jsx(Divider, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    content: \"Sign up\",\n    type: \"submit\",\n    color: \"teal\",\n    disabled: submitDisabled || !usernameAvailable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }))), __jsx(FooterMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(Signup, \"rrXNm/TDlc1h1dJ6JVwVkONFrEk=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/jyeharry/Projects/udemy-mern-project/pages/signup.js"],"names":["React","useState","useEffect","useRef","Form","Button","Message","Segment","TextArea","Divider","HeaderMessage","FooterMessage","SocialInputs","regexUsername","Signup","firstName","lastName","email","password","bio","facebook","instagram","youtube","twitter","user","setUser","showSocialLinks","setShowSocialLinks","showPassword","setShowPassword","errorMessage","setErrorMessage","formLoading","setFormLoading","submitDisabled","setSubmitDisabled","username","setUsername","usernameLoading","setUsernameLoading","usernameAvailable","setUsernameAvailable","isFormComplete","name","every","item","Boolean","handleSubmit","e","preventDefault","handleChange","target","value","prev","test","circular","link","onClick"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport {Form, Button, Message, Segment, TextArea, Divider} from 'semantic-ui-react';\n\nimport {HeaderMessage, FooterMessage} from '../components/Common/WelcomeMessage';\nimport SocialInputs from '../components/Common/SocialInputs';\n\nconst regexUsername = /^(?!.*\\.\\.)(?!.*\\.$)[^\\W][\\w.]{0,29}$/;\n\nfunction Signup() {\n  const [user, setUser] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    bio: '',\n    facebook: '',\n    instagram: '',\n    youtube: '',\n    twitter: ''\n  });\n\n  const {firstName, lastName, email, password, bio} = user;\n\n  const [showSocialLinks, setShowSocialLinks] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [formLoading, setFormLoading] = useState(false);\n  const [submitDisabled, setSubmitDisabled] = useState(true);\n\n  const [username, setUsername] = useState('');\n  const [usernameLoading, setUsernameLoading] = useState(false);\n  const [usernameAvailable, setUsernameAvailable] = useState(false);\n\n  useEffect(() => {\n    const isFormComplete = [name, email, password, bio].every((item) => Boolean(item));\n    setSubmitDisabled(!isFormComplete);\n  });\n\n  const handleSubmit = (e) => e.preventDefault();\n  const handleChange = (e) => {\n    const {name, value} = e.target;\n    setUser(prev => ({...prev, [name]: value}));\n  }\n\n  return (\n    <>\n      <HeaderMessage/>\n      <Form loading={formLoading} error={!errorMessage} onSubmit={handleSubmit}>\n        <Message error header='Oops!' content={errorMessage} onDismiss={() => setErrorMessage(null)}/>\n        <Segment>\n          <Form.Input\n            label='First name'\n            placeholder='First name'\n            name='firstName'\n            value={firstName}\n            onChange={handleChange}\n            fluid\n            icon='user'\n            iconPosition='left'\n            required\n          />\n          <Form.Input\n            label='Last name'\n            placeholder='Last name'\n            name='lastName'\n            value={lastName}\n            onChange={handleChange}\n            fluid\n            icon='user'\n            iconPosition='left'\n            required\n          />\n          <Form.Input\n            loading={usernameLoading}\n            error={!usernameAvailable}\n            label='Username'\n            placeholder='Username'\n            value={username}\n            onChange={(e) => {\n              setUsername(e.target.value);\n              setUsernameAvailable(regexUsername.test(e.target.value));\n            }}\n            fluid\n            icon={usernameAvailable ? 'check' : 'close'}\n            iconPosition='left'\n            required\n          />\n          <Form.Input\n            label='Email'\n            placeholder='Email'\n            name='email'\n            value={email}\n            onChange={handleChange}\n            fluid\n            icon='envelope'\n            iconPosition='left'\n            type='email'\n            required\n          />\n          <Form.Input\n            label='Password'\n            placeholder='Password'\n            name='password'\n            value={password}\n            onChange={handleChange}\n            fluid\n            icon={{\n              name: 'eye',\n              circular: true,\n              link: true,\n              onClick: () => setShowPassword(!showPassword)\n            }}\n            iconPosition='left'\n            type={showPassword ? 'text' : 'password'}\n            required\n          />\n          <SocialInputs\n            user={user}\n            showSocialLinks={showSocialLinks}\n            setShowSocialLinks={setShowSocialLinks}\n            handleChange={handleChange}\n          />\n          <Divider hidden/>\n          <Button\n            content='Sign up'\n            type='submit'\n            color='teal'\n            disabled={submitDisabled || !usernameAvailable}\n          />\n        </Segment>\n      </Form>\n      <FooterMessage/>\n    </>\n  );\n}\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}