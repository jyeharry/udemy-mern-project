{"ast":null,"code":"var _jsxFileName = \"/Users/jyeharry/Projects/udemy-mern-project/pages/signup.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Form, Button, Message, Segment, TextArea, Divider } from 'semantic-ui-react';\nimport { HeaderMessage, FooterMessage } from '../components/Common/WelcomeMessage';\nimport SocialInputs from '../components/Common/SocialInputs';\nimport ImageDropDiv from '../components/Common/ImageDropDiv';\nconst regexUsername = /^(?!.*\\.\\.)(?!.*\\.$)[^\\W][\\w.]{0,29}$/;\n\nfunction Signup() {\n  const {\n    0: user,\n    1: setUser\n  } = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    bio: '',\n    facebook: '',\n    instagram: '',\n    youtube: '',\n    twitter: ''\n  });\n  const {\n    firstName,\n    lastName,\n    email,\n    password,\n    bio\n  } = user;\n  const {\n    0: showSocialLinks,\n    1: setShowSocialLinks\n  } = useState(false);\n  const {\n    0: showPassword,\n    1: setShowPassword\n  } = useState(false);\n  const {\n    0: errorMessage,\n    1: setErrorMessage\n  } = useState(null);\n  const {\n    0: formLoading,\n    1: setFormLoading\n  } = useState(false);\n  const {\n    0: submitDisabled,\n    1: setSubmitDisabled\n  } = useState(true);\n  const {\n    0: username,\n    1: setUsername\n  } = useState('');\n  const {\n    0: usernameLoading,\n    1: setUsernameLoading\n  } = useState(false);\n  const {\n    0: usernameAvailable,\n    1: setUsernameAvailable\n  } = useState(false);\n  const {\n    0: media,\n    1: setMedia\n  } = useState(null);\n  const {\n    0: mediaPreview,\n    1: setMediaPreview\n  } = useState(null);\n  const {\n    0: highlighted,\n    1: setHighlighted\n  } = useState(false);\n  const inputRef = useRef(null);\n  useEffect(() => setSubmitDisabled(!(firstName && lastName && email && password)));\n\n  const handleSubmit = e => e.preventDefault();\n\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n\n    if (name === 'media') {\n      setMedia(files[0]);\n      setMediaPreview(URL.createObjectURL(files[0]));\n    }\n\n    setErrorMessage('stuff');\n    setUser(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      [name]: value\n    }));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(HeaderMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), __jsx(Form, {\n    loading: formLoading,\n    error: !!errorMessage,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(Message, {\n    error: true,\n    header: \"Oops!\",\n    content: errorMessage,\n    onDismiss: () => {\n      console.log(errorMessage);\n      setErrorMessage(null);\n      console.log(errorMessage);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), __jsx(Segment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(ImageDropDiv, {\n    mediaPreview: mediaPreview,\n    setMediaPreview: setMediaPreview,\n    setMedia: setMedia,\n    inputRef: inputRef,\n    highlighted: highlighted,\n    setHighlighted: setHighlighted,\n    handleChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), __jsx(Form.Input, {\n    label: \"First name\",\n    placeholder: \"First name\",\n    name: \"firstName\",\n    value: firstName,\n    onChange: handleChange,\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), __jsx(Form.Input, {\n    label: \"Last name\",\n    placeholder: \"Last name\",\n    name: \"lastName\",\n    value: lastName,\n    onChange: handleChange,\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), __jsx(Form.Input, {\n    loading: usernameLoading,\n    error: !usernameAvailable,\n    label: \"Username\",\n    placeholder: \"Username\",\n    value: username,\n    onChange: e => {\n      setUsername(e.target.value);\n      setUsernameAvailable(regexUsername.test(e.target.value));\n    },\n    fluid: true,\n    icon: usernameAvailable ? 'check' : 'close',\n    iconPosition: \"left\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), __jsx(Form.Input, {\n    label: \"Email\",\n    placeholder: \"Email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    fluid: true,\n    icon: \"envelope\",\n    iconPosition: \"left\",\n    type: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }), __jsx(Form.Input, {\n    label: \"Password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    fluid: true,\n    icon: {\n      name: 'eye',\n      circular: true,\n      link: true,\n      onClick: () => setShowPassword(!showPassword)\n    },\n    iconPosition: \"left\",\n    type: showPassword ? 'text' : 'password',\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }), __jsx(Form.Field, {\n    label: \"Bio\",\n    control: TextArea,\n    name: \"bio\",\n    value: bio,\n    onChange: handleChange,\n    placeholder: \"Bio...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }), __jsx(SocialInputs, {\n    user: user,\n    showSocialLinks: showSocialLinks,\n    setShowSocialLinks: setShowSocialLinks,\n    handleChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }), __jsx(Divider, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    content: \"Sign up\",\n    type: \"submit\",\n    color: \"teal\",\n    disabled: submitDisabled || !usernameAvailable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }))), __jsx(FooterMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Signup;","map":{"version":3,"sources":["/Users/jyeharry/Projects/udemy-mern-project/pages/signup.js"],"names":["React","useState","useEffect","useRef","Form","Button","Message","Segment","TextArea","Divider","HeaderMessage","FooterMessage","SocialInputs","ImageDropDiv","regexUsername","Signup","user","setUser","firstName","lastName","email","password","bio","facebook","instagram","youtube","twitter","showSocialLinks","setShowSocialLinks","showPassword","setShowPassword","errorMessage","setErrorMessage","formLoading","setFormLoading","submitDisabled","setSubmitDisabled","username","setUsername","usernameLoading","setUsernameLoading","usernameAvailable","setUsernameAvailable","media","setMedia","mediaPreview","setMediaPreview","highlighted","setHighlighted","inputRef","handleSubmit","e","preventDefault","handleChange","name","value","files","target","URL","createObjectURL","prev","console","log","test","circular","link","onClick"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport {Form, Button, Message, Segment, TextArea, Divider} from 'semantic-ui-react';\n\nimport {HeaderMessage, FooterMessage} from '../components/Common/WelcomeMessage';\nimport SocialInputs from '../components/Common/SocialInputs';\nimport ImageDropDiv from '../components/Common/ImageDropDiv';\n\nconst regexUsername = /^(?!.*\\.\\.)(?!.*\\.$)[^\\W][\\w.]{0,29}$/;\n\nfunction Signup() {\n  const [user, setUser] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    bio: '',\n    facebook: '',\n    instagram: '',\n    youtube: '',\n    twitter: ''\n  });\n\n  const {firstName, lastName, email, password, bio} = user;\n\n  const [showSocialLinks, setShowSocialLinks] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [formLoading, setFormLoading] = useState(false);\n  const [submitDisabled, setSubmitDisabled] = useState(true);\n\n  const [username, setUsername] = useState('');\n  const [usernameLoading, setUsernameLoading] = useState(false);\n  const [usernameAvailable, setUsernameAvailable] = useState(false);\n\n  const [media, setMedia] = useState(null);\n  const [mediaPreview, setMediaPreview] = useState(null);\n  const [highlighted, setHighlighted] = useState(false);\n  const inputRef = useRef(null);\n\n  useEffect(() => setSubmitDisabled(!(firstName && lastName && email && password)));\n\n  const handleSubmit = (e) => e.preventDefault();\n\n  const handleChange = (e) => {\n    const {name, value, files} = e.target;\n    if (name === 'media') {\n      setMedia(files[0]);\n      setMediaPreview(URL.createObjectURL(files[0]));\n    }\n    setErrorMessage('stuff');\n    setUser(prev => ({...prev, [name]: value}));\n  }\n\n  return (\n    <>\n      <HeaderMessage/>\n      <Form loading={formLoading} error={!!errorMessage} onSubmit={handleSubmit}>\n        <Message error header='Oops!' content={errorMessage} onDismiss={() => {\n            console.log(errorMessage);\n            setErrorMessage(null);\n            console.log(errorMessage);\n          }}/>\n        <Segment>\n          <ImageDropDiv\n            mediaPreview={mediaPreview}\n            setMediaPreview={setMediaPreview}\n            setMedia={setMedia}\n            inputRef={inputRef}\n            highlighted={highlighted}\n            setHighlighted={setHighlighted}\n            handleChange={handleChange}\n          />\n          <Form.Input\n            label='First name'\n            placeholder='First name'\n            name='firstName'\n            value={firstName}\n            onChange={handleChange}\n            fluid\n            icon='user'\n            iconPosition='left'\n            required\n          />\n          <Form.Input\n            label='Last name'\n            placeholder='Last name'\n            name='lastName'\n            value={lastName}\n            onChange={handleChange}\n            fluid\n            icon='user'\n            iconPosition='left'\n            required\n          />\n          <Form.Input\n            loading={usernameLoading}\n            error={!usernameAvailable}\n            label='Username'\n            placeholder='Username'\n            value={username}\n            onChange={(e) => {\n              setUsername(e.target.value);\n              setUsernameAvailable(regexUsername.test(e.target.value));\n            }}\n            fluid\n            icon={usernameAvailable ? 'check' : 'close'}\n            iconPosition='left'\n            required\n          />\n          <Form.Input\n            label='Email'\n            placeholder='Email'\n            name='email'\n            value={email}\n            onChange={handleChange}\n            fluid\n            icon='envelope'\n            iconPosition='left'\n            type='email'\n            required\n          />\n          <Form.Input\n            label='Password'\n            placeholder='Password'\n            name='password'\n            value={password}\n            onChange={handleChange}\n            fluid\n            icon={{\n              name: 'eye',\n              circular: true,\n              link: true,\n              onClick: () => setShowPassword(!showPassword)\n            }}\n            iconPosition='left'\n            type={showPassword ? 'text' : 'password'}\n            required\n          />\n          <Form.Field\n            label='Bio'\n            control={TextArea}\n            name='bio'\n            value={bio}\n            onChange={handleChange}\n            placeholder='Bio...'\n          />\n          <SocialInputs\n            user={user}\n            showSocialLinks={showSocialLinks}\n            setShowSocialLinks={setShowSocialLinks}\n            handleChange={handleChange}\n          />\n          <Divider hidden/>\n          <Button\n            content='Sign up'\n            type='submit'\n            color='teal'\n            disabled={submitDisabled || !usernameAvailable}\n          />\n        </Segment>\n      </Form>\n      <FooterMessage/>\n    </>\n  );\n}\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}